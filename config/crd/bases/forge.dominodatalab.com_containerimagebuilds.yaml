
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: containerimagebuilds.forge.dominodatalab.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.imageName
    name: Image Name
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.state
    name: State
    type: string
  - JSONPath: .status.imageURLs
    name: Image URLs
    priority: 1
    type: string
  group: forge.dominodatalab.com
  names:
    kind: ContainerImageBuild
    listKind: ContainerImageBuildList
    plural: containerimagebuilds
    shortNames:
    - cib
    singular: containerimagebuild
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ContainerImageBuild is the Schema for the containerimagebuilds
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ContainerImageBuildSpec defines the desired state of ContainerImageBuild
          properties:
            buildArgs:
              description: Image build arguments.
              items:
                type: string
              type: array
            context:
              description: Build context for the image. This can be a local path or
                url.
              type: string
            contextTimeoutSeconds:
              description: If the build context is a URL, the timeout in seconds for
                fetching. Defaults to 0, which disables the timeout.
              type: integer
            cpu:
              description: Limits build cpu consumption.
              type: string
            disableBuildCache:
              description: Disable the use of layer caches during build.
              type: boolean
            disableLayerCacheExport:
              description: Disable export of layer cache when it is enabled.
              type: boolean
            imageName:
              description: Name used to build an image.
              minLength: 1
              type: string
            imageSizeLimit:
              description: Prevents images larger than this size (in bytes) from being
                pushed to a registry. By default, an image of any size will be pushed.
              format: int64
              type: integer
            initContainers:
              description: Specifies zero or more containers that will run before
                the build container. This is deliberately not of the Container type
                to prevent an account with permission for creating the build custom
                resource from elevating its privilege to what the account running
                the build job can do. E.g. by being able to specify volume mounts,
                devices, capabilities, SELinux options, etc.
              items:
                description: InitContainer specifies a container that will run before
                  the build container.
                properties:
                  args:
                    description: Arguments to the entrypoint. The Docker image's CMD
                      is used if this is not provided.
                    items:
                      type: string
                    type: array
                  command:
                    description: Entrypoint array. The Docker image's ENTRYPOINT is
                      used if this is not provided.
                    items:
                      type: string
                    type: array
                  env:
                    description: Environment variables.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the
                            container and any service environment variables. If a
                            variable cannot be resolved, the reference in the input
                            string will be unchanged. The $(VAR_NAME) syntax can be
                            escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable
                            exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, metadata.labels, metadata.annotations,
                                spec.nodeName, spec.serviceAccountName, status.hostIP,
                                status.podIP, status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  type: string
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Docker image name.
                    minLength: 1
                    type: string
                  name:
                    description: Name of the init container.
                    minLength: 1
                    type: string
                required:
                - image
                - name
                type: object
              type: array
            labels:
              additionalProperties:
                type: string
              description: Labels added to the image during build.
              type: object
            memory:
              description: Limits build memory consumption.
              type: string
            messageQueueName:
              description: Override queue where messages are published when status
                update messaging is configured. If this value is provided and the
                message configuration is missing, then no messages will be published.
              type: string
            pluginData:
              additionalProperties:
                type: string
              description: Provide arbitrary data for use in plugins that extend default
                capabilities.
              type: object
            pushTo:
              description: Push to one or more registries.
              items:
                type: string
              minItems: 1
              type: array
            registries:
              description: Configure one or more registry hosts with special requirements.
              items:
                description: Registry contains the parameters required to pull and/or
                  push from an OCI distribution registry.
                properties:
                  basicAuth:
                    description: Configure basic authentication credentials for a
                      registry.
                    properties:
                      password:
                        description: Inline basic auth password.
                        type: string
                      secretName:
                        description: Name of secret containing dockerconfigjson credentials
                          to registry.
                        type: string
                      secretNamespace:
                        description: Namespace where credentials secret resides.
                        type: string
                      username:
                        description: Inline basic auth username.
                        type: string
                    type: object
                  dynamicCloudCredentials:
                    description: When enabled, the controller will request credentials
                      from the specific cloud registry (AWS, GCP, Azure Cloud) and
                      provide them to the build job for authentication.
                    type: boolean
                  nonSSL:
                    description: Push image to a plain HTTP registry.
                    type: boolean
                  server:
                    description: Registry hostname.
                    minLength: 1
                    type: string
                required:
                - server
                type: object
              type: array
            timeoutSeconds:
              description: Optional deadline in seconds for image build to complete.
              type: integer
          required:
          - context
          - imageName
          - pushTo
          type: object
        status:
          description: ContainerImageBuildStatus defines the observed state of ContainerImageBuild
          properties:
            buildCompletedAt:
              format: date-time
              type: string
            buildStartedAt:
              format: date-time
              type: string
            errorMessage:
              type: string
            imageSize:
              format: int64
              type: integer
            imageURLs:
              items:
                type: string
              type: array
            state:
              description: BuildState represents a phase in the build process.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
